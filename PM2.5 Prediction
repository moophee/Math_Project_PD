import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression


X_train = np.array([
    [60, 25, 61, 26, 62, 27, 63, 28, 64, 29, 65, 30],  # Hour 1 to Hour 6: [humidity1, temp1, humidity2, temp2, ..., humidity6, temp6]
    [55, 22, 56, 23, 57, 24, 58, 25, 59, 26, 60, 27],  # Similarly for the rest
    [70, 30, 71, 31, 72, 32, 73, 33, 74, 34, 75, 35],
    [65, 28, 66, 29, 67, 30, 68, 31, 69, 32, 70, 33],
    [80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40],
    [50, 20, 51, 21, 52, 22, 53, 23, 54, 24, 55, 25]
])

# Corresponding PM2.5 levels for each dataset
y_train = np.array([10, 15, 20, 18, 25, 12])

# Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Function to get user input for the last 6 hours
def get_user_input():
    user_input = []
    for i in range(6):
        print(f"Enter data for Hour {i+1}:")
        humidity = float(input(f"  Humidity (in %): "))
        temperature = float(input(f"  Temperature (in °C): "))
        pm25 = float(input(f"  PM2.5 (in µg/m³): "))
        user_input.append(humidity)
        user_input.append(temperature)
        user_input.append(pm25)  # Adding PM2.5 to the feature vector
    return np.array(user_input).reshape(1, -1)

# Get user input for the last 6 hours
new_data = get_user_input()

# Predict PM2.5 using the trained model
predicted_pm25 = model.predict(new_data)
print(f"Predicted PM2.5 for the last 6 hours of data: {predicted_pm25[0]}")

# Optionally, you can visualize the results
y_pred = model.predict(X_train)

plt.scatter(y_train, y_pred)
plt.xlabel("Actual PM2.5")
plt.ylabel("Predicted PM2.5")
plt.title("Actual vs Predicted PM2.5")
plt.show()
